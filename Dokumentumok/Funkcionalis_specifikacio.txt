0. Vezetői összefoglaló

 Ennek a programnak a célja tükrözni a tanárok elképzeléseit és a NAT által mehatározott tantervet. Ez a program nem csak egy tanévet ölel fel, hanem egymásra épülő tudásbázist tartalmaz. A különböző területeken a diákok képességeit, gondolkozását, problémamegoldó képességeit fejleszti. Figyelembe véve az oktatók, diákok szakmai, személyes és szociális helyzetét is a legkisebb községtől a fővárosig mindenhova eljusson. Ezt alapozza meg a programban a pontosan megválasztott tématerületek, a hozzájuk kapcsolódó feladatok és azok ellenőrzése. Cél a folyamatorientált kompetenciák elérése.
 A diákok egyedül végezhetik a feladatokat, de a pedagógus irányítja és a program ráépül egy előzetes tudásra és kellő motivációt ad a folytatáshoz. A legegyszerűbb játékos verziótól kezdve szintenként, folyamatosan változik a tananyag nehézsége, amelyek közül a diák választhat. A diák a saját eredményeit összefoglalóan megnézheti.
 Bekerülés egy-egy osztályba meghívás alapján történik. Lehetőség van egyes diákoknak más diákokkal való megméretettésére. A tananyag egységekre bontható, melyet a tanár bővíthet, változtathat. A tanár tudatos osztálykialakítással előre diferenciálhatja a tanulókat.
 Az oktató feladata a háttérből való irányítás, ugyanakkor ő is ellenőrzi az osztályt.

1. A rendszer céljai, és nem céljai.

 Sok mindent lehetne errõl mondani, de rövidre fogom, mert annyi időm nincs, a ranked nem nyeri meg saját magát. Feltehetnénk magunknak a kérdést, hogy "mégis melyik rendszerről van itt szó?" na hát igen. Ez egy nagyon jó kérdés. Melyik rendszerek jöhetnek egyáltalán szóba? A tejút rendszer? Számítógépes rendszer? Kommunizmus? Rendszerváltás? Igazából bármelyik. Utálok dokumentálni, nemtudom látszódik-e. Pláne, hogy ennyire overkill az egész.

 A mi rendszerünk, ami érdekel bennünket, az az a rendszer, amivel megvalósítjuk a célunkat. Nyilván nem egy scrum vagy egy kanban, hanem egy saját, elég speciális rendszer. Tartja a mondás is, "kicsi, savanyú, de a miénk". Nem másról, mint a csoportos munkáról van szó. A csoportos munka célja, hogy felkészítsen bennünket a jövőbeli akadályokra, hogy azokat majdnem gondmentesen átléphessük, ugyanis a programozók csapatban dolgoznak, mindenki kap egy kis részt, amit meg kell valósítania, aztán amint készen van vele, jön a következő. Ez a folyamat addig ismétlődik, amíg az aktuális célunkat el nem érjük. Ez nem csak a programozásban, de más iparágban is jellemzõ tevékenység. A csoportos munka nagyon jó hatással van a kommunikációs készségre, az emberi kapcsolatok kialakulására, az együttműködésre, és sok egyéb más szociális tulajdonságra. Csoportban dolgozni jó.

 A rendszer nem céljai közé tartozik az elbukás, a teljes megsemmisülés, a projekt létrejövésének hátráltatása és az Anschluss.

2. Jelenlegi helyzet leírása

 Egy olyan rendszer megvalósítása amely a funkcionális specifikációban leírt vágyálomrendszernek megfelel.
 Jelenlegi cél, kialakítani egy olyan webes felületet, amely átláthatóan tartalmazza a diákok és tanárok által használható oldalakat. A felhasználói felületre történő belépésnél már elkülönítve látható az oktatói és tanulói felület.
 A diák láthatja a statisztikáit, párbaj felületet és a játékos feladatok leírását, míg az oktatói felületen elérhetők a leckék, a diákok statisztikája, illetve az osztályok. Az oktató által megnyitható oldalon, elérhető számára az osztálynévsor és a diákok eredménye mellett, az osztály létrehozása, diák hozzáadás és diák törlése funkció is.

3. A vágyálomrendszer leírása

 A program elindításakor választhatunk, hogy oktatói, illetve tanulói felületre szeretnénk-e belépni. Ezt kiválasztva lehetőségünk van regisztrálni, de míg diákként ez teljesen ingyenes és akadálymentes, oktatóként regisztrálni csak érvényes iskolai licenccel lehet, így megakadályozva, hogy
bárki használja a szoftvert. Az oktatói felületre belépve több funkciót is észrevehetünk: 
	1. Osztályok menedzselése
		1.1 Osztály létrehozása
			1.1.1 Diák hozzáadása osztályhoz
			1.1.2 Diák eltávolítása osztályból
		1.3 Osztály aktivitása
		1.4 Diákok gyakorlásainak eredményei
	2. Játékok listája
		2.1 Játék módosítása
			2.1.1 Kérdés/lehetõség hozzadása
			2.1.2 Kérdés/lehetõség törlése
			2.1.3 Kérdés/lehetõség módosítása
			2.1.4 Játék aktiválása/deaktiválása
		2.2 Játékok statisztikái
 Oktatóként képesek vagyunk osztályokat létrehozni, ezekbe diákokat invitálni, így képesek elindítani a gyakorló feladatokat, ezek mellett képesek vagyunk diákokat eltávolítani az osztályokból. Ezeknek az osztályoknak az aktivitását is követni lehet, illetve az egyes diákok eredményeit is képesek vagyunk megtekinteni.
 A játékokban szereplõ kérdéshalmazt képesek vagyunk bovíteni, ebbol kérdéseket törölni, vagy éppen módosítani. Ha szükséges, egyes játékokat ki is tudunk kapcsolni, ha az nem túl népszerû a diákoknál, vagy egy hosszadalmasabb kérdésreformot hajtanánk végre, és amint végeztünk ezzel, újra élesbe helyezhetjük a játékot. Meg tudjuk tekinteni az egyes játékok statisztikáit, például hogy mely játékot játsszák a legtöbben, melyben a legmagasabb 
a hibázási arány stb. 
 Ha tanulói felületbe jelentkezünk be, és még nem vagyunk beinvitálva egyetlen osztályba sem, akkor a programban nem vagyunk képesek semmit sem csinálni, ellenben ha meghívtak minket egy osztályba, láthatjuk az egyes játékokat, illetve a legjobb eredményünket az egyes játékokhoz
kapcsolódóan, és a próbálkozások számát.

4. A rendszerre vonatkozó külsõ megszorítások

5. Jelenlegi üzleti folyamatok modellje

Az alábbi üzleti folyamatmodellt kell átalakítani az Igényelt üzleti folyamatok modellje c. fejezet alapján:
A jelenlegi üzleti modellben a megrendelő alkalmazottai (oktatók) külsős óraadóként, vagy különórákkal vesznek részt az adott oktatási intézmény tanulóinak fejlesztésében. Módszereik közé tartozik a frontális oktatás (előadásjelleg), és a csoportos, csapatépítő jellegű előadási modell is, ahol a diákok és az oktató is egyetlen közös körben ülnek egymással szemben.
A jelenlegi modellben a fent megfogalmazott módon sajátítják el a tanulók a tananyagot. Az adott tanóra tananyagából minden következő óra elején pár perces, rövid feladatsort kell kitölteniük a diákoknak. Ezeknek a feladatoknak csak pozitív elbírálása lehetséges, megrovást nem von maga után az eredmény.
Témakörönként témazáró dolgozatot írnak a diákok, erre általában 6 hetente kerül sor. Ekkor az adott témakörből átfogó tesztet írnak a diákok, amelyben kifejtős, kiválasztós és összepárosítós feladatok a jellemzőek.
A megrendelés egyik pontja az óra eleji mini dolgozatok online kiváltására vonatkozik.
A jelenlegi modellben a minidolgozatokat közös ellenőrzéssel javítják helyben megírás után. Ezután a lapokat be kell adni. (Ezt a folyamatot kell automatizálni online rendszerben.)
A témazáró dolgozatok javítása beadás után történik, amit a kurzust vezető oktató végez még az intézmény falai között, vagy otthon. Ezt a folyamatot a rendszernek (egyelőre) nem feladata kiváltani.
Az óra eleji felmérők eredményeit eddig az oktató összesítette, ami az esetleges jobb elbírálás matematikai alapját képezte a tanítási félév végén.

6. Igényelt üzleti folyamatok modellje

 Egy olyan szoftver kifejlesztése a cél, amelyet a felhasználó iskolák (általános iskolák, középiskolák, stb.) oktatói mindennapjaikban a tanítás során az órák tanmenetébe beépitve a tananyag gyorsabb áttekinthetőbb megértését segítve, olyan plusz információkat ad át a tanulóknak, melyek fejlesztik logikai és egyéb specifikus képességeiket.
	1. Célunk a szoftver pozitív előnyeit megismertetni az oktatókkal.
	2. Az oktatók által történt egyéni belépésnek a pozítiv hatásait elismertetni.
	3. Ugyanakkor a diákok számára teljeskörű, bármilyen formában a rendszeren való hozzáférés  segítése.
	4. A rendszer teljesen zárt, mivel, ha a tanulói felületbe jelentkezünk be, és még nem vagyunk beinvitálva egyetlen osztályba sem, akkor a programban nem vagyunk képesek semmit
sem csinálni.
	5. Legyen kiváltság a bekerülés? Ezáltal olyan presztízst teremteni a programnak, amely egy bekerülési kényszert fog előidézni.
	6. Állandó és folyamatos kapcsolatot jelent az oktató és a diák között a tanterem falain kívül is. Folyamatos visszacsatolás, ellenőrzési lehetőség.
	7. Ezáltal az oktató a diákot folyamatosan motiválhatja, pozitív visszajelzésekkel felkelteheti a diák matematika iránti érdeklődését.
	8. Különleges képességű diákokokat könnyebb kiszűrni. 
	9.  Jól puskázni csak a zsenik tudnak.
 Előnyök: 	- gyors visszacsatolás
	- szélesebb tanulási lehetőségek megnyitása
	- gyors ellenőrzés
Képességek:  	- oktatói nyitottság
	   	- továbbképzésre való hajlam 
		- több oktatói szabadidő
		- dolgozzon a szoftver helyettünk (oktatói részről)
Lehetőségek:	- csökkenteni lehet a munkerőt
		- időt spórolhatnak vele
		- nincs szükség táblára, krétára
		- iskola fenntartási költségeinek csökkentése

7. Követelménylista

8. Használati esetek

9. Megfeleltetés


10. Képernyőtervek

11. Forgatókönyvek:
 A szoftver futtatása közben három szereplõ figyelhetõ meg.

- Az első maga a kliens (ami lehet akár android, akár web alapú), ezen keresztül tudja a felhasználó használni, és élvezni az általunk készítendõ rendszert.
 Regisztráció, majd bejelentkezés után kiválaszthatjuk, hogy melyik játékot szeretnénk elindítani.
 A játékmód kiválasztása után megjelennek az adott játékhoz tartozó UI elemek, 
például lehet ez egy timer, vagy a játékos álatal még felhasználható segítségek száma, és az adott feladat részei.
- A második szereplõ a már elõzõekben említett játékos, akinek a teszt kitöltése a feladata, a megadott szabályok szerint.
 Ilyen szabály lehet, például, hogy ne lépje túl a megadott idõkeretet, vagy ne hibázhat X alkalomnál többször.
- A harmadik szereplõ a Web-service, ez felel azért, hogy a felhasználó által küldött adatokat el tudjuk tárolni, illetve a már elkészült teszteket, és játékokhoz szükséges adatokat a kliensekhez tudjuk eljuttatni.

12. Funkció - követelmény megfeleltetés

	A K1 követelmény a megjelenés napján elérhető lesz, hiszen ez a legprimitívebb játékok egyike. 
A játék során geometriai alakok lesznek a kártyákon, minden egyes alak duplikáltan lesz az asztalon, 
így csak meg kell találni a párját, illetve a nehézséggel a kártyák száma is nő ugyan arra az időre. 9/10

	A K2 követelmény szintén megjelenés napi funkcionalitás, a játékmenet során két halmaz fog feltűnni a felhasználó előtt: az mindkettőben össze lesznek keverve a fogalmak, illetve egyenletek, a másikban pedig definíciók és egyenlet eredmények. 
Két egymás melletti dobozba lehet behúzni ezeket a párokat, és ha az egyenlethez jó eredményt, illetve a fogalomhoz jó definíciót párosítottunk, zöldre váltanak a dobozok. Időre futnak a körök, egy kör akkor ér véget, ha minden doboz zöldre váltott. 8/10

	A K3 és K4 követelmény adja a lelkét a programnak, így ez is release napi funkció. 
A jogkörök részletezve vannak a vágyálomrendszerben, megtekinthetők vizuálisan a "Login - reg" című képernyőterven, a "Diák 01 Tanulás" c. képernyőterven és a "Tanár 01 Leckék" illetve a "Tanár 03 Osztályok" képernyőtervben. 10/10

	A K5 követelmény implementálásra kerül mind diák, mint tanári szemszögből. 
A diákok megtekinthetik egyes játékokban elért eredményeit és statisztikát (lsd. "Diák 02 Statisztika" képernyőterv), illetve a tanárok az egyéni illetve egész osztályos eredményeket megtekinthetik (lsd. "Tanár 02 Statisztika" képernyőterv) 5/10

	a K6-os követelménynek megfelelően a diákokat a teljesítményüknek megfelelően jutalmazzuk 7/10 priorítású.

	A k7-es követelmény 2/10 priorítású ennek köszönhetően tudják összemérni a játékosok a tudásukat,ezen a felületen képesek vagyunk kihívni más játékosokat, választhatunk tantárgyakat, témákat. Megvalósítása opcionális!

	A k8-as követelmény szintén 7/10-es priorítású ez azért fontos, hogy visszajelzést tudjunk adni a felhaszálónak a kurzus befejeztével!
	
	A k9-es követelmény 5/10-es priorítású a diákok itt láthatják, hogy közösségi szinten mekkora tudással rendelkeznek!

	A k10-es követelményre épül az egész alkalmazás design tehát ez bír a legmagasabb priorítással (10/10), ebben a pontban meghatározott felületekből a web és az android mindeféleképpen megvalósításra kerül viszont windowsos felületre az alkalmazás csak az 1.1-es update után lesz elérhető!

13. fejezet

Fogalomszótár:
--------------

	-[bug]: fejlesztési hiba ami által a program nem a várt eredményt hozza 
	-[main menu]: A fõ menü, amely a weboldal/program indulásakor megjelenik(oktatói, tanulói felület kiválasztása)
	-[games]: Az játékoknak a listája amibõl választhatunk.
	-[gameboard]: Játék közben, a különbözõ elemeket tartalmazó felület
	-[backend]: A kiszolgáló, ahonnan az alkalmazást el lehet érni 
	-[frontend]:  egy réteg ami feladata a rendszerbõl kijutó adatok prezentálása, illetve a bejövõ adatok fogadása
	-[web-service]:különbözõ programnyelveken írt és különbözõ platformokon futó szoftveralkalmazások interneten keresztül történõ adatcseréjére használt webszolgáltatások.
	-[oktató felület]: A felhasználónak az átlagosnál magasabb jogai vannak("admin"). 
	-[tanuló felület]: Csak olyan jogai vannak amit az oktatói felületen meghatároztak.
	-[statisztika]: A játékokon elért eredmények áttekintése.
	-[játék aktiválása]: A játék elérhetõvé tétele bizonyos emberek számára.
	-[játék deaktiválása]: A játék elzárása mindenki elõl.
